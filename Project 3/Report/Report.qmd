---
title: "project 3"
format: pdf
---

## 3

Setting B = 1000, and the considering the sceniaro: c2/c1 ranging from 2 to 100, with 5 different cluster senario: 1. each cluster only have 1 sample (500 clusters), 2. only one clusters. 3. number of samples with in cluster is equal to the number of clusters. 4. number of samples with in cluster is half of the number of clusters. 5. number of samples with in cluster is twice the number of clusters. alpha = 10, beta = 10, B = 1000, 

## ADEMP

### Aim
  The goal is to find the optimal combinations of G and R under different c1/c2 ratio and data generation mechanism that minimizes the variance.
  
### Data generation
  
range B from 1000, 5000, 10000, c1/c2 ratio range from 2, 5, 15, 50. grid search G and R. c1 fixed at 1, alpha range from 0, 10, 50. beta range from 1, 10, 50. sigma and gamma range from (0.25, 1, 100). alpha and beta will not effect the variance of the estimator under linear model, but may effect under poisson model. p range from 0.3, 0.5, 0.7.



## EDA

```{r}
library(ggplot2)
library(gtsummary)
res <- read.csv("../Result/estimation_result.csv")
res$B <- as.factor(res$B)

res_sum <- read.csv("../Result/estimation_summary.csv")
```

### NA value

```{r}
res_na_n <- res[is.na(res$beta_hat_n),]
res_na_p <- res[is.na(res$beta_hat_p),]
tbl_na_n <- tbl_summary(res_na_n, include = colnames(res_na_n)[1:8]) 
tbl_na_p <- tbl_summary(res_na_p, include = colnames(res_na_n)[1:8]) 

tbl_merge(list(tbl_na_n, tbl_na_p), tab_spanner = c("**Normal**","**Poisson**"))
```


## Optimal under normal

```{r}
res_sum_n_sigma <- res_sum[res_sum$alpha == 1 &
                       res_sum$beta == 1 & 
                       res_sum$gamma == 1 & 
                       res_sum$p == 0.5 &
                       res_sum$B == 1000,]

ggplot(res_sum_n_sigma, aes(y = Var_n, x = G, color = as.factor(sigma))) +
  geom_line() +
  geom_point() +
  facet_wrap(~ratio, scales = 'free') +
  labs(title = "Optimal under normal")

ggplot(res_sum_n_sigma, aes(y = Var_p, x = G, color = as.factor(sigma))) +
  geom_line() +
  geom_point() +
  facet_wrap(~ratio, scales = 'free') +
  labs(title = "Optimal under normal")

res_sum_n_gamma <- res_sum[res_sum$alpha == 1 &
                       res_sum$beta == 1 & 
                       res_sum$sigma == 1 & 
                       res_sum$p == 0.5 &
                       res_sum$B == 1000,]

ggplot(res_sum_n_gamma, aes(y = Var_n, x = G, color = as.factor(gamma))) +
  geom_line() +
  facet_wrap(~ratio, scales = 'free') +
  labs(title = "Optimal under normal")

ggplot(res_sum_n_gamma, aes(y = Var_p, x = G, color = as.factor(gamma))) +
  geom_line() +
  facet_wrap(~ratio, scales = 'free') +
  labs(title = "Optimal under normal")

res_sum_n_alpha <- res_sum[res_sum$beta == 1 & 
                       res_sum$sigma == 1 & 
                       res_sum$gamma == 1 & 
                       res_sum$p == 0.5 &
                       res_sum$B == 1000,]

ggplot(res_sum_n_alpha, aes(y = Var_n, x = G, color = as.factor(alpha))) +
  geom_line() +
  facet_wrap(~ratio, scales = 'free') +
  labs(title = "Optimal under normal")

ggplot(res_sum_n_alpha, aes(y = Var_p, x = G, color = as.factor(alpha))) +
  geom_line() +
  facet_wrap(~ratio, scales = 'free') +
  labs(title = "Optimal under normal")


res_sum_b <- res_sum[res_sum$alpha == 1 &
                       res_sum$beta == 1 & 
                       res_sum$sigma == 1 & 
                       res_sum$gamma == 1 &
                       res_sum$p == 0.5 &
                       res_sum$ratio == 5,]

ggplot(res_sum_b, aes(y = Var_n, x = G, color = as.factor(B))) +
  geom_line() +
  geom_point() +
  labs(title = "Optimal under normal")

ggplot(res_sum_b, aes(y = Var_p, x = G, color = as.factor(B))) +
  geom_line() +
  geom_point() +
  labs(title = "Optimal under normal")

res_sum_beta <- res_sum[res_sum$alpha == 1 &
                       res_sum$sigma == 1 & 
                       res_sum$gamma == 1 & 
                       res_sum$p == 0.5 &
                       res_sum$B == 1000 &
                       res_sum$ratio == 5,]

ggplot(res_sum_beta, aes(y = Var_n, x = G, color = as.factor(beta))) +
  geom_line() +
  labs(title = "Optimal under normal")

ggplot(res_sum_beta, aes(y = Var_p, x = G, color = as.factor(beta))) +
  geom_line() +
  labs(title = "Optimal under normal")

```

```{r}
res_sum_n_sigma <- res_sum[res_sum$alpha == 1 &
                       res_sum$beta == 1 & 
                       res_sum$gamma == 1 &
                       res_sum$p == 0.5 &
                       res_sum$B == 1000 &
                       res_sum$ratio == 5,]

ggplot(res_sum_n, aes(y = log(Var_n), x = G, color = as.factor(sigma))) +
  geom_line() +
  labs(title = "Optimal under normal")

res_sum_n_gamma <- res_sum[res_sum$alpha == 1 &
                       res_sum$beta == 1 & 
                       res_sum$sigma == 1 &
                       res_sum$p == 0.5 &
                       res_sum$B == 1000,]

ggplot(res_sum_n, aes(y = log(Var_n), x = G, color = as.factor(gamma))) +
  geom_line() +
  labs(title = "Optimal under normal")

```


## Effect of gamma and sigma
```{r}
ggplot(res, aes(x = gamma, y = Bias, color = sigma)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(title = "Effect of gamma and sigma on Bias")
```

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this 

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
